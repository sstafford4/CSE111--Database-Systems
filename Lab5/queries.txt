NEED TO CORRECT: 6, 7, 11, 14

#1 --CORRECT--
--How many customers and suppliers are in every nation from ASIA?

-- select customers and suppliers where region = ASIA
select n_name as country, count(distinct c_custkey) as customers, count(distinct s_suppkey) as suppliers
from nation, region, customer, supplier
where n_nationkey = c_nationkey
and n_nationkey = s_nationkey
and n_regionkey = r_regionkey
and r_name = 'ASIA'
group by n_name

#2 --CORRECT--
--For every order priority, count the number of line items ordered in 1998 and received (l receiptdate)
--earlier than the commit date (l commitdate)

select o_orderpriority as priority, count(l_orderkey) as item_count
from orders
join lineitem on o_orderkey = l_orderkey
where strftime('%Y', o_orderdate) = '1998'
and l_receiptdate < l_commitdate
group by o_orderpriority

#3 --CORRECT--
--How many customers from every region have placed at least one order and have more than the average
--account balance?

select r_name as region, count(distinct c_custkey) as customers
from customer
join nation on c_nationkey = n_nationkey
join orders on o_custkey = c_custkey
join region on n_regionkey = r_regionkey
where c_acctbal > (select avg(c_acctbal) from customer)
group by r_name

-- this should be correct

#4 --CORRECT--
--Count the number of distinct suppliers that supply parts whose type contains BRUSHED and have size
--equal to any of 10, 20, 30, or 40

select count(distinct s_suppkey) as supp_count
from supplier
join partsupp on s_suppkey = ps_suppkey
join part on ps_partkey = p_partkey
where p_type like '%BRUSHED%'
and (p_size = 10 or p_size = 20 or p_size = 30 or p_size = 40)

-- this should be correct

#5 --CORRECT--
--Find the highest value line item(s) (l extendedprice*(1-l discount)) shipped after October 6,
--1994. Print the name of the part corresponding to these line item(s).

select p_name as part
from lineitem
join part on l_partkey = p_partkey
join orders on l_orderkey = o_orderkey
where o_orderdate > '1994-10-06'
and l_extendedprice * (1 - l_discount) = (select max(l_extendedprice * (1 - l_discount)) from lineitem
                                            join orders on o_orderkey = l_orderkey
                                            where o_orderdate > '1994-10-06')
group by p_name

#6 --INCORRECT--
--For parts whose type contains NICKEL, return the name of the supplier from AFRICA that can supply
--them at maximum cost (ps supplycost), for every part size. Print the supplier name together with
--the part size and the maximum cost.

select s_name as supplier, p_size as size, ps_supplycost as max_cost
from supplier
join partsupp on s_suppkey = ps_suppkey
join part as p on ps_partkey = p.p_partkey
join nation on s_nationkey = n_nationkey
join region on n_regionkey = r_regionkey
where r_name = 'AFRICA'
and p_type like '%NICKEL%'
and ps_supplycost = (select max(ps_supplycost) from partsupp ps2
                        join part as p2 on p_partkey = ps_partkey
                        where p_type like '%NICKEL%'
                        and p2.p_size = p.p_size )
group by s_name, p_size

#7 --INCORRECT--
--Print the name of the parts supplied by suppliers from ARGENTINA that have total value in the top
--10% total values across all the supplied parts. The total value is ps supplycost*ps availqty. Hint:
--Use the LIMIT keyword with a SELECT subquery

select p_name as part
from part
join partsupp on p_partkey = ps_partkey
join supplier on ps_suppkey = s_suppkey
join nation on s_nationkey = n_nationkey
where n_name = 'ARGENTINA' 
order by (ps_supplycost * ps_availqty) desc 
limit (select count(*) * 0.1 from partsupp)

--gives 240 results

-- TRUE QUERY --
with top_value_parts as (
    select p_name as part, (ps_supplycost * ps_availqty) as total_value
    from part
    join partsupp on p_partkey = ps_partkey
    join supplier on ps_suppkey = s_suppkey
    join nation on s_nationkey = n_nationkey
    where n_name = 'ARGENTINA'
    order by total_value desc
)
select part
from top_value_parts
limit (select count(*) * 0.1 from top_value_parts)


#8 --CORRECT--
--Based on the available quantity of items, who is the manufacturer p mfgr of the most popular item
--(the more popular an item is, the less available it is in ps availqty) from Supplier#000000084?

select p_mfgr as manufacturer
from part
join partsupp on p_partkey = ps_partkey
join supplier on ps_suppkey = s_suppkey
where s_name = 'Supplier#000000084'
and ps_availqty = (select min(ps_availqty) from partsupp
                    where ps_suppkey = s_suppkey)

#9 --CORRECT--
--How many suppliers in every region have more balance in their account than the average account
--balance of their own region?

select r_name as region, count(s_suppkey) as supp_count
from supplier
join nation on s_nationkey = n_nationkey
join region on n_regionkey = r_regionkey
where s_acctbal > (select avg(s_acctbal) from supplier
                    join nation on s_nationkey = n_nationkey
                    where n_regionkey = r_regionkey)
group by r_name

#10 --CORRECT--
--How many customers are not from AMERICA or EUROPE?

select count(c_custkey) as cust_count
from customer 
join nation on c_nationkey = n_nationkey
join region on n_regionkey = r_regionkey
where not(r_name = 'AMERICA' or r_name = 'EUROPE')

#11 --INCORRECT--
--in 1996 (l shipdate) by suppliers who did not supply any line item with an extended price less than
--1800 in 1998?

select sum(ps_supplycost) as total_supply_cost
from partsupp
join part on ps_partkey = p_partkey
join lineitem on ps_partkey = l_partkey
join supplier on ps_suppkey = s_suppkey
where p_retailprice < 1500
and strftime('%Y', l_shipdate) = '1996'
and s_name not in (select l_suppkey from lineitem
               join supplier on s_suppkey = l_suppkey
               where strftime('%Y', l_shipdate) = '1998'
               and l_extendedprice < 1800)

#12 --CORRECT--
--Count the number of orders made in 1995 in which at least one line item was received (l receiptdate)
--by a customer later than its commit date (l commitdate). List the count of such orders for every order
--priority.

select o_orderpriority as priority, count(distinct o_orderkey) as order_count
from orders
join lineitem on o_orderkey = l_orderkey
where strftime('%Y', o_orderdate) = '1995'
and l_receiptdate > l_commitdate
group by o_orderpriority

#13 --TRUE QUERY IS CORRECT--
--For any two regions, find the gross discounted revenue (l extendedprice*(1-l discount)) derived
--from line items in which parts are shipped from a supplier in the first region to a customer in the
--second region in 1996 and 1997. List the supplier region, the customer region, the year (l shipdate),
--and the revenue from shipments that took place in that year.

select r_name as supp_region, r_name as cust_region, strftime('%Y', l.l_shipdate) as year, sum(l_extendedprice * (1-l_discount)) as revenue
from lineitem l, region
join orders l_order on l.l_orderkey = l_order.o_orderkey
join supplier supp on l.l_suppkey = supp.s_suppkey
join nation supp_nation on supp.s_nationkey = supp_nation.n_nationkey
join customer cust on l_order.o_custkey = cust.c_custkey
join nation cust_nation on cust.c_nationkey = cust_nation.n_nationkey
where strftime('%Y', l.l_shipdate) in ('1996', '1997')
group by supp_region, cust_region, year

-- hey, its somethin'

-- TRUE QUERY --
select supp_region.r_name as supp_region, cust_region.r_name as cust_region, strftime('%Y', l.l_shipdate) as year, 
    sum(l.l_extendedprice * (1 - l.l_discount)) as revenue
from lineitem l
join orders o on l.l_orderkey = o.o_orderkey
join supplier s on l.l_suppkey = s.s_suppkey
join nation supp_nation on s.s_nationkey = supp_nation.n_nationkey
join region supp_region on supp_nation.n_regionkey = supp_region.r_regionkey
join customer c on o.o_custkey = c.c_custkey
join nation cust_nation on c.c_nationkey = cust_nation.n_nationkey
join region cust_region on cust_nation.n_regionkey = cust_region.r_regionkey
where strftime('%Y', l.l_shipdate) in ('1996', '1997')
group by supp_region.r_name, cust_region.r_name, year

#14 -- DEF INCORRECT BUT CANNOT FIX--
--The market share for a given nation within a given region is defined as the fraction of the revenue from
--the line items ordered by customers in the given region that are supplied by suppliers from the given
--nation. The revenue of a line item is defined as l extendedprice*(1-l discount). Determine the
--market share of GERMANY in ASIA in 1995 (l shipdate).

with total_rev as (
select sum(l_extendedprice * (1 - l_discount)) as total
from region, nation, customer, lineitem, orders
where r_name = 'ASIA'
and r_regionkey = n_regionkey
and n_nationkey = c_nationkey
and c_custkey = o_custkey
and o_orderkey = l_orderkey
)

select sum(l.l_extendedprice * (1 - l.l_discount)) / total as GERMANY_in_ASIA_in_1995
from total_rev, region cust_region, nation supp_nation, nation cust_nation, lineitem l, orders o
join  supplier s on s.s_nationkey = supp_nation.n_nationkey
join customer c on c.c_nationkey = cust_nation.n_nationkey
where supp_nation.n_name = 'GERMANY'
and cust_nation.n_regionkey = cust_region.r_regionkey
and cust_region.r_name = 'ASIA'
and l.l_suppkey = s.s_suppkey
and l.l_orderkey = o.o_orderkey
and o.o_custkey = c.c_custkey
and strftime('%Y', l.l_shipdate) = '1995'

--answer from github, i did not write this monstrosity--

#15 --CORRECT--
--For the line items ordered in February 1996 (o orderdate), find the largest discount that is smaller
--than the average discount among all the orders.

select l_discount as max_small_disc
from lineitem
join orders on l_orderkey = o_orderkey
where strftime('%Y', o_orderdate) = '1996'
and strftime('%m', o_orderdate) = '02'
and l_discount < (select avg(l_discount) from lineitem)
order by l_discount desc
limit 1